# 3. Напишите программу, в которой пользователь вводит координаты x, y с клавиатуры,
# создается соответствующий экземпляр и он сохраняется в списке.
# Количество вводимых объектов N=5. Затем, вывести их атрибуты в консоль.


class Point3:
    def __init__(self, x = 0 , y = 0, N = 0 ):    # Передадим через метод __init__ два аргумента
        self.x = x                       # в теле метода __init__ создадим две переменные x, y
        self.y = y
        print("Создание экземпляра класса Point2") # Проверка создания экземпляра класса Point3

        digs1 = [0] * 5  # ЗАДАВАТЬ
        while self.x >= 0 and self.y >= 0:
            self.x = int(input("Введите целое число x: "))
            self.y = int(input("Введите целое число y: "))
            digs1[N] = [self.x ** 1, self.y ** 1]  # ИЗМЕНЯТЬ
            if self.x >= 0 and self.y >= 0: N += 1  # Число должно соответствовать числу введенных чисел
            # Если х > 0, то N нужно увеличить на 1
            print("Сформированный список из значений: ", digs1)







            # if x == 0:
            #     print("Было введено число 0: ", x == 0)
            #     break


    def setCoords(self, x, y):  # любой метод объявленный внутри класса имеет параметр self, ( с, d - передали в качестве следующих параметров)
        self.a = x  # с помощью метода setCoords можем переопределять координаты точки класса Point и присвоим переданное значение c, d
        self.b = y



pt = Point3()
#
# print("__dict__: ", pt.__dict__)
# print("__dict__: ", Point3.__dict__)
# print("Создание экземпляра класса Point3: ", Point3.__dict__)
#
# print("Сформированный список из значений: ", digs1.__dict__)




###############################################################################

# class Point():
#     def __init__(self):
#         self.x = input('x: ')
#         self.y = input('y: ')
#
#     def pointPrint(self):
#         print(self.x, self.y)
#
# list = []
# for i in range(5):
#     pt = Point()
#     list.append(pt)
#
# for i in list:
#     i.pointPrint()
